- name: Install Docker
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - docker
    - docker-compose
  when: dev_utils_install_docker|bool

- name: Create Docker System Config Dirs
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  with_items:
    - /etc/docker
    - /etc/systemd/system/docker.service.d/
  when: dev_utils_install_docker|bool

- name: Copy docker config
  copy:
    src: "{{ dev_utils_docker_config }}"
    dest: /etc/docker/daemon.json
  notify: restart docker
  when:
  - dev_utils_install_docker|bool
  - dev_utils_docker_config != 'none'

- name: Copy docker configs
  template:
    src: docker.conf.j2
    dest: /etc/systemd/system/docker.service.d/override.conf
  notify: restart docker
  when:
  - dev_utils_install_docker|bool
  - dev_utils_extra_docker_host != 'none'

- name: Add user to docker Group
  user:
    name: "{{ dev_utils_dev_user }}"
    groups: docker
  when:
  - dev_utils_install_docker|bool
  - dev_utils_dev_user != 'none'

- name: Install nodejs
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - nodejs
    - npm
  when:
  - dev_utils_setup_nodejs|bool
  - not dev_utils_use_nvm|bool

- name: Install nvm
  include: nvm.yml
  when:
  - dev_utils_setup_nodejs|bool
  - dev_utils_use_nvm|bool

- name: Add gcloud keyring
  shell: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
  args:
    creates: /usr/share/keyrings/cloud.google.gpg
  when:
  - dev_utils_setup_gcloud|bool or dev_utils_setup_k8s|bool
  - ansible_distribution in apt_distros

- name: Add gcloud PPA
  copy:
    content: "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main"
    dest: /etc/apt/sources.list.d/google-cloud-sdk.list
  when:
  - dev_utils_setup_gcloud|bool or dev_utils_setup_k8s|bool
  - ansible_distribution in apt_distros
  register: gcloud_install

- name: Update apt cache
  apt:
    update_cache: yes
  when: gcloud_install.changed

- name: Install kubernetes
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - kubectl
    pkg_aur_name:
    - kubernetes
  when: dev_utils_setup_k8s|bool

- name: Install stern
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - stern
    pkg_aur_name:
    - stern-bin
  when:
  - dev_utils_setup_k8s|bool
  - ansible_distribution in pacman_distros

- name: Download stern
  get_url:
    url: https://github.com/wercker/stern/releases/download/1.10.0/stern_linux_amd64
    checksum: "sha256:a0335b298f6a7922c35804bffb32a68508077b2f35aaef44d9eb116f36bc7eda"
    dest: /usr/local/bin/stern
    mode: +x
  when: ansible_distribution in apt_distros

- name: Install gcloud
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - google-cloud-sdk
    pkg_aur_name:
    - google-cloud-sdk
  when: dev_utils_setup_gcloud|bool
