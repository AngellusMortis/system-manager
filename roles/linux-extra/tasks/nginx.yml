- name: Set local variables
  set_fact:
    linux_extra_letencrypt_args: "-d {{ linux_extra_domains | join(' -d ') }}"
    linux_extra_letencrypt_cert_name: "{{ linux_extra_domains | first }}"
    linux_extra_letencrypt_renew_args: "--nginx"
    linux_extra_use_cloudflare: "{{ linux_extra_cloudflare_api_token != '' }}"

- name: Create Cloudflare credentials file
  tempfile:
    state: file
    suffix: ini
  changed_when: false
  when: linux_extra_use_cloudflare|bool
  register: cloudflare_credentials

- name: Write Cloudflare credentials
  copy:
    content: "dns_cloudflare_api_token = {{ linux_extra_cloudflare_api_token }}\n"
    dest: "{{ cloudflare_credentials.path }}"
  changed_when: false
  when: linux_extra_use_cloudflare|bool

- name: Set Cloudflare Let's Encrypt args
  set_fact:
    linux_extra_letencrypt_args: "--dns-cloudflare --dns-cloudflare-credentials {{ cloudflare_credentials.path }} {{ linux_extra_letencrypt_args }}"
    linux_extra_letencrypt_renew_args: "--dns-cloudflare-credentials {{ cloudflare_credentials.path }}"
  when: linux_extra_use_cloudflare|bool

- name: Set Nginx Let's Encrypt args
  set_fact:
    linux_extra_letencrypt_args: "--nginx {{ linux_extra_letencrypt_args }}"
  when: not (linux_extra_use_cloudflare|bool)

- name: Install nginx
  include_role:
    name: pkg-install
  vars:
    pkg_name:
    - nginx
    - certbot
    - certbot-nginx
    - certbot-dns-cloudflare
    - gzip

- name: Create letencrypt SSL configs
  shell: certbot certonly --agree-tos -m {{ linux_extra_letencrypt_email }} -n {{ linux_extra_letencrypt_args }}
  args:
    creates: "/etc/letsencrypt/options-ssl-nginx.conf"

- name: Copy nginx Main Config
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf

- name: Download GeoIP Country Database
  get_url:
    url: https://mailfud.org/geoip-legacy/GeoIP.dat.gz
    dest: /etc/nginx/GeoIP.dat.gz
  register: geoip_country
  tags: ['geoip', 'ratelimited']

- name: Extract GeoIP Country Database
  command: "gzip -kfd /etc/nginx/GeoIP.dat.gz"
  when: geoip_country.changed
  tags: ['geoip', 'ratelimited']

- name: Download GeoIP City Database
  get_url:
    url: https://mailfud.org/geoip-legacy/GeoIPCity.dat.gz
    dest: /etc/nginx/GeoIPCity.dat.gz
  register: geoip_city
  tags: ['geoip', 'ratelimited']

- name: Extract GeoIP City Database
  command: "gzip -kfd /etc/nginx/GeoIPCity.dat.gz"
  when: geoip_country.changed
  tags: ['geoip', 'ratelimited']

- name: Download GeoIP Org Database
  get_url:
    url: https://mailfud.org/geoip-legacy/GeoIPOrg.dat.gz
    dest: /etc/nginx/GeoIPOrg.dat.gz
  register: geoip_org
  tags: ['geoip', 'ratelimited']

- name: Extract GeoIP Org Database
  command: "gzip -kfd /etc/nginx/GeoIPOrg.dat.gz"
  when: geoip_org.changed
  tags: ['geoip', 'ratelimited']

- name: Create nginx Directories
  file:
    name: "{{ item }}"
    state: directory
  with_items:
    - /etc/nginx/common
    - /etc/nginx/domains

- name: certbot args
  debug:
    msg: "{{ linux_extra_letencrypt_args }}"
    verbosity: 1

- name: Create SSLCerts
  shell: "certbot certonly {{ linux_extra_letencrypt_args }}"
  args:
    creates: "/etc/letsencrypt/live/{{ linux_extra_letencrypt_cert_name }}"
  environment:
    LANG: en_US.UTF-8

- name: Check for SSLCert renews
  command: "certbot {{ linux_extra_letencrypt_renew_args }} renew"

- name: systemd Enable nginx.service
  systemd:
    name: nginx.service
    enabled: true
    state: started

- name: Configure nginx proxies
  include: nginx-proxy.yml
  with_items: "{{ linux_extra_nginx_proxies }}"

- name: Delete Cloudflare credentials
  file:
    path: cloudflare_credentials.path
    state: absent
  changed_when: false
  when: linux_extra_use_cloudflare|bool
