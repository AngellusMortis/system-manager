*filter

:INPUT DROP [0:0]
:FORWARD DROP [13:416]
:OUTPUT ACCEPT [164:14040]
:TCP - [0:0]
:UDP - [0:0]

#### Setup

## Keep maintain connections
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

## Localhost
-A INPUT -i lo -j ACCEPT

# VPN
-A INPUT -i tun0 -j ACCEPT

# Whitelisted Networks
{% for network in network_utils_whitelisted_networks %}
-A INPUT -s {{ network }} -j ACCEPT
{% endfor %}

# Drop invalid requests
-A INPUT -m conntrack --ctstate INVALID -j DROP

## Ping
-A INPUT -p icmp --icmp-type echo-request -m recent --name ping_limiter --set
-A INPUT -p icmp --icmp-type echo-request -m recent --name ping_limiter --update --hitcount 6 --seconds 4 -j DROP
-A INPUT -p icmp --icmp-type echo-request -j ACCEPT

## TCP/UDP rules
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP

## Ports

{% for tcp_port in network_utils_whitelisted_tcp_ports %}
-A TCP -p tcp --dport {{ tcp_port.port }} {% if tcp_port.source %}--src {{ tcp_port.source }} {% endif %}-j ACCEPT
{% endfor %}

{% for udp_port in network_utils_whitelisted_udp_ports %}
-A UDP -p udp --dport {{ udp_port.port }} {% if udp_port.source %}--src {{ udp_port.source }} {% endif %}-j ACCEPT
{% endfor %}

# Drop all others
-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-rst

COMMIT
