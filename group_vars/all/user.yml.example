## General Settings

# GPG public key ring (~/.gnupg/pubring.kbx)
gpg_public_key_ring: none

# SSH authorized keys file (~/.ssh/authorized_keys)
ssh_authorized_keys: none

# username of main user you do everything as
local_user: username

# configure the root user as well as the local_user when setting up
# shells/configs
configure_root: true

# Standard system locale
# https://wiki.archlinux.org/index.php/Locale
system_locale: en_US.UTF-8

# enable tmux support
use_tmux: false

# enable powerline suport
use_powerline: false

# powerline colors
powerline_colorscheme: default
powerline_prompt_bg_color: 'darkblue'
powerline_prompt_bg_color_root: 'red'
powerline_xonsh_prompt_bg_color: '#0087af'
powerline_xonsh_prompt_bg_color_root: 'RED'


## Pacman AUR settings
# Only applies to Arch Linux

# must be one of the AUR Helpers supported by ansible-aur:
# https://github.com/kewlfft/ansible-aur
# yay, aurman, pacaur, trizen, pikaur
aur_builder: pikaur

# user to use when installing AUR packages,
# will automatically be created and given correct permissions
# should not be main user as it will also be excluded from Login Screen
aur_user: aur


## X11 Forwarding settings

# Install X11 helper script to install, useful if you plan to run remote
# X11 applications on your local
x11_copy_script: true

# dictionary of short names for various SSH hosts for X11/GPG helper scripts
host_aliases:
 - { alias: local, host: 127.0.0.1 }

# Enable X11 forwaring over SSH on your local system. You must be running
# sshd for this to work
x11_enable_forwarding: true


## Shell settings

# default login shell for the user
# supported default shells: bash, zsh
# set to 'none' if you do not want to change your default shell
default_shell: bash

# secondary shell is a unstable non-login shell that gets loaded in rc file
# for login shell
# supported default shells: xonsh
# set to 'none' if you do not want to configure a secondary shell
secondary_shell: none

# additional shells to config
# can be any values of default/secondary shells
# must include default and secondary shell vars from above
# set to blank if you do not want to configure shells
enabled_shells:
  - bash
  - zsh


## Git Settings

# name and email for git
# set both to 'none' to skip configuring Git
git_email: none
git_name: none

# public GPG signing key to use for git
# Set this to 'none', but above if you want to configure git
# without a signing key
git_signing_key: none


## GPG Helper settings

# Location of GPG agents for gpg-remote helper script
# default location locally is /run/user/1000/gnupg/S.gpg-agent
#   where 1000 = your user's uid
gpg_local_agent: none
gpg_remote_agent: none

# WSL specific GPG settings to get Windows 10 GPG Agent in WSL
# See https://codingnest.com/how-to-use-gpg-with-yubikey-wsl/ for setup
wsl_npiperelay_path: none
windows_gpg_agent_path: none


## Cloud Provider Settings

# cloud provider(s) to configure
# supported: onedrive
# set to empty value to not install a cloud provider
cloud_providers:

# Absolute path to sync list file
# https://github.com/abraunegg/onedrive/blob/master/docs/USAGE.md#selective-sync
# Ubuntu requires 19.04
onedrive_sync_list: none


## Desktop Settings

# DEs to install and setup
# supported: kde
# only applies to Linux
# set to empty value to not manage desktop environments
desktop_environments:
- kde

# Display Manager to use
# supported: sddm
# only applies to Linux
# set to 'none' to not configure display manager
# NOTE: See "Changing Display Managers" in README about changing your default
# WARNING: sddm will not work on Ubuntu, not without the Drivers working
# TODO: Fix sddm for Ubuntu
desktop_display_manager: sddm

# Network Manager to use
# supported: networkmanager
# only applies to Linux
# set to 'none' to not configure network manager
desktop_network_manager: networkmanager

## Graphics Drivers
# WARNING: Only currently applies to Arch Linux Installs
# TODO: Add Ubuntu support

install_intel_drivers: false

install_nvidia_drivers: false
